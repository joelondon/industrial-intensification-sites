{"version":3,"sources":["mapLayers.js","mapAbout.js","components/TooltipHover.js","styles.jsx","components/PhotoGallery.js","components/SiteDialog.js","components/SwitchesGroup.js","components/Facilities.js","components/Feedback.js","serviceWorker.js","index.js","components/Geocoder.js","hooks/usePersistedState.js","App.js"],"names":["mapLayers","value","showing","about","mapAbout","TooltipHover","feature","properties","Development","drawerWidth","window","innerWidth","document","querySelector","offsetWidth","useStyles","makeStyles","theme","root","display","appBar","breakpoints","up","transition","transitions","create","easing","sharp","duration","leavingScreen","down","right","bottom","top","appBarShift","width","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","maxWidth","contentShift","formControl","margin","noLabel","marginTop","PhotoGallery","site","images","original","process","items","showPlayButton","showThumbnails","lazyLoad","SiteDialog","visible","handleDialogVisibility","useTheme","fullScreen","useMediaQuery","Dialog","onClose","open","fullWidth","IconButton","onClick","style","position","color","palette","grey","DialogContent","height","screen","availHeight","Box","flexDirection","paddingTop","p","border","JSON","parse","Divider","orientation","flexItem","Typography","variant","gutterBottom","component","Borough","DialogActions","typography","minWidth","selectEmpty","snack","Boolean","location","hostname","match","React","Component","ReactDOM","render","ReactRouterRoute","Route","App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","usePersistedState","key","defaultValue","useState","persistedState","localStorage","getItem","state","setState","useEffect","setItem","stringify","iOS","browser","test","userAgent","MAPBOX_TOKEN","showBorder","onTilesLoad","smallScreen","classes","ref","useRef","layers","setLegend","drawerOpen","setDrawerOpen","dialogVisible","setDialogVisible","dialogContent","setDialogContent","handleDrawerOpen","setTimeout","map","resize","easeTo","left","MenuButton","backgroundColor","visibility","className","clsx","noWrap","edge","TabPanel","props","children","index","other","role","hidden","id","tabValue","setTabValue","tabChange","event","newValue","Number","TabsContent","square","onChange","scrollButtons","label","mapContainerRef","setMap","tooltipHoverRef","mapboxgl","Popup","offset","closeButton","lng","setLng","lat","setLat","zoom","setZoom","Object","keys","el","getStyle","filter","elfilter","startsWith","innerel","setLayoutProperty","Map","container","current","center","pitch","touchZoomRotate","disableRotation","addControl","NavigationControl","showCompass","showZoom","on","values","includes","paint","ret","e","getCanvas","cursor","features","queryRenderedFeatures","point","length","layer","tooltipNode","createElement","setLngLat","lngLat","setDOMContent","addTo","remove","keyboard","disable","getCenter","getZoom","addSource","type","data","addLayer","source","flyTo","speed","curve","t","gotoLocation","disableBackdropTransition","disableDiscovery","anchor","onOpen","paper","textAlign"],"mappings":"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","file":"static/js/main.88b4d0e5.chunk.js","sourcesContent":["export const mapLayers = {\n  'Industrial intensification sites': {\n    value: 'industrial-intensification-sites',\n    showing: true,\n    about: ''\n  }\n}\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nconst markdown = `\nTemporibus et in tempore dignissimos illum. Autem est excepturi quas placeat blanditiis. Vero ullam nemo et accusamus molestiae accusantium. Repudiandae et eveniet sunt tempora et molestiae.\n\nCupiditate quo quis aperiam unde. Harum architecto numquam asperiores. Cupiditate dignissimos molestiae velit quasi porro eum est quae. Aut fugit aliquid inventore qui aperiam. Consequuntur quidem autem dolorem aliquam rem quidem odio.\n\nNobis sequi incidunt et molestias consectetur provident. Minima fuga esse dolor consectetur. Consequuntur sit sapiente sint sed. Dolore facere possimus quisquam sapiente perferendis id. Unde qui atque perspiciatis enim doloremque aspernatur.\n\nUt libero ullam et nihil. Optio rem consequatur sint et sint suscipit quas eaque. Ut eos nam nisi neque aut. Omnis cupiditate eius voluptatibus maxime ut incidunt aut. Numquam repudiandae quo dolores molestiae omnis.\n\nAliquam quaerat voluptatem qui. Omnis quis quia facere quisquam. Voluptas non cupiditate cum deleniti tempora est sit facilis. Quam blanditiis nemo doloremque est consectetur a voluptas. Quibusdam nisi ratione similique quos dignissimos corrupti sequi quae. Eum asperiores sed sint eius alias sint enim.\n`\nexport const mapAbout = <ReactMarkdown>{markdown}</ReactMarkdown>\n","import React from 'react'\n\nconst TooltipHover = ({ feature }) => {\n  return (\n    <div>\n      {feature.properties.Development ? feature.properties.Development : ''}\n    </div>\n  )\n}\n\nexport default TooltipHover\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const drawerWidth =\n  window.innerWidth < 600\n    ? document.querySelector('#root').offsetWidth\n    : document.querySelector('#root').offsetWidth * 0.378\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    [theme.breakpoints.down('sm')]: {\n      right: `calc(100% - 4em) !important`,\n      bottom: `0 !important`,\n      top: `unset !important`\n    }\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: drawerWidth\n  },\n  title: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none !important'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: { width: drawerWidth, flexShrink: 0 }\n  },\n  drawerPaper: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: '100%'\n      // height: `${windowHeight * 1.618 - windowHeight}px !important`\n    }\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start'\n  },\n  content: {\n    maxWidth: '100%',\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginRight: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: 0\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: '100%'\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}))\n","import * as React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport ImageGallery from 'react-image-gallery'\nimport 'react-image-gallery/styles/css/image-gallery.css'\n// import 'maplibre-gl/dist/maplibre-gl.css'\n\nexport const PhotoGallery = ({ site }) => {\n  const images = [\n    {\n      original: `${process.env.PUBLIC_URL}/pictures/${site}/Photo 1.png`\n      // thumbnail: `/pictures/${site}/Photo 1.png`\n    },\n    {\n      original: `${process.env.PUBLIC_URL}/pictures/${site}/Photo 2.png`\n      // thumbnail: `/pictures/${site}/Photo 1.png`\n    },\n    {\n      original: `${process.env.PUBLIC_URL}/pictures/${site}/Photo 3.png`\n      // thumbnail: `/pictures/${site}/Photo 1.png`\n    },\n    {\n      original: `${process.env.PUBLIC_URL}/pictures/${site}/Photo 4.png`\n      // thumbnail: `/pictures/${site}/Photo 1.png`\n    },\n    {\n      original: `${process.env.PUBLIC_URL}/pictures/${site}/Photo 5.png`\n      // thumbnail: `/pictures/${site}/Photo 1.png`\n    },\n    {\n      original: `${process.env.PUBLIC_URL}/pictures/${site}/Photo 6.png`\n      // thumbnail: `/pictures/${site}/Photo 1.png`\n    }\n  ]\n  {\n    /*\n    <Card height={`${window.screen.availHeight / 2}px`}>\n    <CardMedia\n    component=\"img\"\n    height={`${window.screen.availHeight - 400}px`}\n    image={process.env.PUBLIC_URL + \"/pictures/75-bugsby's-way/Photo 1.png\"}\n    alt=\"picture\"\n    style={{ borderRadius: '4px' }}\n  />*/\n  }\n  {\n    /* <CardContent>\n    <Typography gutterBottom variant=\"h5\" component=\"div\">\n      Lizard\n    </Typography>\n    <Typography variant=\"body2\" color=\"text.secondary\">\n      Lizards are a widespread group of squamate reptiles, with over 6,000\n      species, ranging across all continents except Antarctica\n    </Typography>\n  </CardContent>\n  <CardActions>\n    <Button size=\"small\">Share</Button>\n    <Button size=\"small\">Learn More</Button>\n  </CardActions>\n  </Card>*/\n  }\n  return (\n    <ImageGallery\n      items={images}\n      showPlayButton={false}\n      showThumbnails={false}\n      lazyLoad={true}\n    />\n  )\n}\n","import * as React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport Box from '@material-ui/core/Box'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { useTheme } from '@material-ui/core/styles'\nimport { PhotoGallery } from './PhotoGallery'\n\nexport const SiteDialog = ({ visible, handleDialogVisibility, content }) => {\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\n\n  return (\n    <div>\n      <Dialog\n        onClose={handleDialogVisibility}\n        aria-labelledby=\"customized-dialog-title\"\n        open={visible}\n        fullScreen={fullScreen}\n        fullWidth={true}\n        maxWidth={'xl'}\n      >\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleDialogVisibility}\n          style={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: theme => theme.palette.grey[500]\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n\n        <DialogContent>\n          {content && (\n            <div\n              style={{\n                width: '100%',\n                height: fullScreen\n                  ? 'auto'\n                  : `${window.screen.availHeight / 1.3}px`\n              }}\n            >\n              <Box\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  paddingTop: '2rem'\n                }}\n              >\n                <Box style={{ p: 1, padding: '2rem', border: '1px' }}>\n                  <PhotoGallery\n                    site={JSON.parse(content).properties.Development}\n                  />\n                </Box>\n                <Divider orientation=\"vertical\" flexItem />\n                <Box style={{ p: 1, padding: '1rem' }}>\n                  <Typography variant=\"h2\" gutterBottom component=\"div\">\n                    {JSON.parse(content).properties.Development}\n                  </Typography>\n                  <Typography\n                    gutterBottom\n                    component=\"div\"\n                    style={{ display: 'flex', flexDirection: 'row' }}\n                  >\n                    <div style={{ width: '50%' }}>Borough</div>{' '}\n                    <code>{JSON.parse(content).properties.Borough}</code>\n                  </Typography>\n                  <Typography\n                    gutterBottom\n                    component=\"div\"\n                    style={{ display: 'flex', flexDirection: 'row' }}\n                  >\n                    <div style={{ width: '50%' }}>Floorspace</div>\n                    <code>\n                      {JSON.parse(content).properties['Total floorspace m2']}m\n                      <sup>2</sup>\n                    </code>\n                  </Typography>\n                  <Typography\n                    gutterBottom\n                    component=\"div\"\n                    style={{ display: 'flex', flexDirection: 'row' }}\n                  >\n                    <div style={{ width: '50%' }}>Units</div>\n                    <code>{JSON.parse(content).properties['No. units']}</code>\n                  </Typography>\n                  <Typography\n                    gutterBottom\n                    component=\"div\"\n                    style={{ display: 'flex', flexDirection: 'row' }}\n                  >\n                    <div style={{ width: '50%' }}>Unit sizes</div>\n                    <code>\n                      {JSON.parse(content).properties['Unit sizes from m2']} -{' '}\n                      {JSON.parse(content).properties['Unit sizes to m2']}m\n                      <sup>2</sup>\n                    </code>\n                  </Typography>\n                  <Typography\n                    gutterBottom\n                    component=\"div\"\n                    style={{ display: 'flex', flexDirection: 'row' }}\n                  >\n                    <div style={{ width: '50%' }}>Prices</div>\n                    <code>\n                      £{JSON.parse(content).properties['Price range from £']} -{' '}\n                      £{JSON.parse(content).properties['Price range to £']}\n                    </code>\n                  </Typography>\n                </Box>\n              </Box>\n            </div>\n          )}\n        </DialogContent>\n        <DialogActions></DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport Popover from '@material-ui/core/Popover'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2)\n  }\n}))\n\nexport default function SwitchesGroup(props) {\n  const { layers, setLayers, legend } = props\n  const classes = useStyles()\n\n  const handleChange = event => {\n    layers[event.target.name].showing = event.target.checked\n    setLayers({\n      ...layers,\n      [event.target.name]: layers[event.target.name]\n    })\n  }\n\n  const legendColour = (el, legend, layers) => {\n    switch (el) {\n      case 'Outdoor cool spaces':\n        return '#6D6FA2'\n      case 'Indoor cool spaces':\n        return '#9888CD'\n      case 'Cooler areas':\n        return 'rgba(0,255,255,0.9)'\n      case 'Water fountains':\n        return '#43B7EF'\n      default:\n        return legend\n          ? legend.filter(key => Object.keys(key)[0] === layers[el].value)[0][\n              layers[el].value\n            ]\n          : ''\n    }\n  }\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [aboutText, setAboutText] = React.useState(null)\n\n  const handleInfoClick = (event, el) => {\n    setAnchorEl(event.currentTarget)\n    setAboutText(event.currentTarget.getAttribute('about'))\n  }\n\n  const handleInfoClose = () => {\n    setAnchorEl(null)\n  }\n\n  const open = Boolean(anchorEl)\n  const id = open ? 'simple-popover' : undefined\n\n  return legend ? (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Choose map overlays to show</FormLabel>\n      <FormGroup>\n        {Object.keys(layers).map((el, i) => (\n          <div style={{ display: 'flex' }} key={i}>\n            <FormControlLabel\n              key={i}\n              control={\n                <Switch\n                  key={i}\n                  color=\"primary\"\n                  style={{\n                    color: legendColour(el, legend, layers),\n                    ':checked': { color: 'red' }\n                  }}\n                  checked={layers[el].showing}\n                  onChange={handleChange}\n                  name={el}\n                />\n              }\n              label={el}\n            />\n            <InfoOutlinedIcon\n              style={{ height: 'unset' }}\n              onClick={handleInfoClick}\n              about={layers[el].about}\n            />\n          </div>\n        ))}\n      </FormGroup>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleInfoClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        <Typography className={classes.typography}>{aboutText}</Typography>\n      </Popover>\n    </FormControl>\n  ) : (\n    <div style={{ textAlign: 'center', margin: '0 auto' }}>\n      <CircularProgress />\n    </div>\n  )\n}\n","/* eslint-disable no-use-before-define */\nimport React, { useEffect } from 'react'\nimport usePersistedState from '../hooks/usePersistedState'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 260\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}))\n\nconst options = [\n  {\n    title: 'Drinking water',\n    value: 'free_water',\n    filter: ['==', ['get', 'free_water'], 'true']\n  },\n  {\n    title: 'Seating',\n    value: 'seating_available',\n    filter: ['==', ['get', 'seating_available'], 'true']\n  },\n  {\n    title: 'Water feature',\n    value: 'water_feature',\n    filter: ['>', ['length', ['get', 'shade_seating']], 0]\n  },\n  {\n    title: 'Access for people with disabilities',\n    value: 'people with disabilities',\n    filter: ['in', 'people with disabilities', ['get', 'accessible']]\n  },\n  {\n    title: 'Toilets',\n    value: 'toilets',\n    filter: ['in', ['get', 'toilets'], 'Toilets are available on site']\n  }\n]\n\nexport default function Facilities({ map }) {\n  const classes = useStyles()\n  const [value, setValue] = usePersistedState('facilities', [])\n\n  const filterMap = (map, newValue) => {\n    if (newValue.length > 0) {\n      const filter = newValue.map(el => el.filter)\n      filter.unshift('all')\n      map && map.setFilter('boroughdesignatedcoolspaces', filter)\n      map && map.setFilter('boroughdesignatedcoolspaces-glow', filter)\n    } else {\n      map && map.setFilter('boroughdesignatedcoolspaces', null)\n      map && map.setFilter('boroughdesignatedcoolspaces-glow', null)\n    }\n  }\n\n  useEffect(() => {\n    filterMap(map, value)\n  }, [map, value])\n\n  return (\n    <FormControl className={classes.formControl}>\n      <Autocomplete\n        multiple\n        value={value}\n        id=\"facilities\"\n        onChange={(event, newValue) => {\n          setValue(newValue)\n        }}\n        options={options}\n        getOptionLabel={option => (option ? option.title : '')}\n        renderInput={params => (\n          <TextField {...params} label=\"Choose facilities\" />\n        )}\n      />\n    </FormControl>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      display: 'flex'\n    }\n  },\n  snack: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}))\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n}\n\nexport default function Feedback() {\n  const classes = useStyles()\n\n  const [email, setEmail] = React.useState('')\n  const [feedback, setFeedback] = React.useState('')\n  const [checked, setChecked] = React.useState(false)\n\n  const handleChangeEmail = event => {\n    setEmail(event.target.value)\n  }\n  const handleChangeFeedback = event => {\n    setFeedback(event.target.value)\n  }\n  const handleChangeChecked = event => {\n    setChecked(event.target.checked)\n  }\n\n  const [snackOpen, setSnackOpen] = React.useState(false)\n\n  const openSnackBar = () => {\n    setSnackOpen(true)\n    setEmail('')\n    setFeedback('')\n    setChecked(false)\n  }\n\n  const closeSnackBar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setSnackOpen(false)\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    const data = {\n      correspondent: event.target.email.value\n        ? event.target.email.value\n        : 'noreply@london.gov.uk',\n      app: 'industrial-intensification-sites-feedback',\n      title: 'industrial-intensification-sites feedback',\n      message:\n        event.target.feedback.value +\n        '. Permission to contact: ' +\n        event.target.permission.checked\n    }\n    // PREPARE POST HEADERS AND BODY\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data)\n    }\n\n    async function asyncFetch(requestOptions) {\n      const response = await fetch(\n        'https://apps.london.gov.uk/node-mailer/mail/send',\n        requestOptions\n      )\n      const text = await response.text()\n      text.includes('Message accepted for delivery')\n        ? openSnackBar()\n        : console.err('not sent')\n    }\n\n    asyncFetch(requestOptions)\n  }\n\n  return (\n    <>\n      <Snackbar\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={closeSnackBar}\n      >\n        <Alert onClose={closeSnackBar} severity=\"success\">\n          Thanks, your message has been sent to the team and a receipt emailed\n          to the email contact provided.\n        </Alert>\n      </Snackbar>\n      <FormControl component=\"fieldset\" fullWidth={true}>\n        <FormLabel component=\"legend\">\n          We are keen to hear from users of the map as to what they found useful\n          and any improvements we could make. Please leave your comments,\n          suggestions or questions to the team below.\n        </FormLabel>\n        <form\n          onSubmit={handleSubmit}\n          className={classes.root}\n          noValidate\n          autoComplete=\"on\"\n        >\n          <TextField\n            required\n            id=\"email\"\n            label=\"Your email\"\n            value={email}\n            onChange={handleChangeEmail}\n          />\n          <TextField\n            multiline\n            maxRows={20}\n            required\n            id=\"feedback\"\n            label=\"Your feedback\"\n            value={feedback}\n            onChange={handleChangeFeedback}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={checked}\n                onChange={handleChangeChecked}\n                name=\"permission\"\n                color=\"secondary\"\n                id=\"permission\"\n              />\n            }\n            label=\"Tick here if you give us permission to email this contact\"\n          />\n          <Button variant=\"contained\" type=\"submit\">\n            Send\n          </Button>\n        </form>\n      </FormControl>\n    </>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { QueryParamProvider } from 'use-query-params'\nimport './index.css'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.log(error, errorInfo)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>\n    }\n\n    return this.props.children\n  }\n}\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Router>\n    <QueryParamProvider ReactRouterRoute={Route}>\n      <App />\n    </QueryParamProvider>\n  </Router>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect } from 'react'\nimport usePersistedState from '../hooks/usePersistedState'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport centroid from '@turf/centroid'\nimport distance from '@turf/distance'\n\nimport useDebounce from '../hooks/useDebounce'\nimport { MAPBOX_TOKEN } from '../App'\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 260\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}))\n\nexport function Geocoder(props) {\n  const { map } = props\n  const [searchTerm, setSearchTerm] = useState('')\n  const [value, setValue] = usePersistedState('searchvalue', '')\n  const [results, setResults] = useState([])\n  const [isSearching, setIsSearching] = useState(false)\n  const [isLocating, setIsLocating] = useState(false)\n\n  const classes = useStyles()\n\n  // The hook will only return the latest value (what we passed in) ...\n  // ... if it's been more than 500ms since it was last called.\n  const debouncedSearchTerm = useDebounce(searchTerm, 500)\n\n  const moveHandler = () => {\n    map &&\n      console.log(\n        map\n          .queryRenderedFeatures(\n            [\n              map.project(map.getBounds().getSouthWest()),\n              map.project(map.getBounds().getNorthEast())\n            ],\n            {\n              layers: ['boroughdesignatedcoolspaces']\n            }\n          )\n          // .querySourceFeatures('tileserver-gl', {\n          //   sourceLayer: 'boroughdesignatedcoolspaces'\n          // })\n          .map(el => {\n            return (\n              el.properties.cool_space_name +\n              ' ' +\n              Math.round(\n                distance(\n                  centroid(el).geometry.coordinates,\n                  map.getCenter().toArray(),\n                  {\n                    units: 'kilometers'\n                  }\n                ) * 1000\n              )\n            )\n          })\n      )\n  }\n\n  const forwardGeocode = selection => {\n    if (selection) {\n      setValue(selection)\n      const fly = (lng, lat, zoom) => {\n        if (map) {\n          map.flyTo({\n            center: [lng, lat],\n            zoom: zoom,\n            speed: 2,\n            curve: 1,\n            easing(t) {\n              return t\n            }\n          })\n          map.getSource('single-point').setData({\n            type: 'Feature',\n            geometry: {\n              type: 'Point',\n              coordinates: [lng, lat]\n            }\n          })\n        }\n      }\n      let lng, lat, zoom\n      if (selection && selection.place_name === 'Go to my location') {\n        setIsLocating(true)\n        const success = position => {\n          lng = position.coords.longitude\n          lat = position.coords.latitude\n          zoom = 14\n          setIsLocating(false)\n          map.once('moveend', moveHandler)\n          fly(lng, lat, zoom)\n        }\n        navigator.geolocation.getCurrentPosition(success)\n      } else {\n        if (selection.id) {\n          // when selection has an id it is from mapbox gazetteer\n          lng = selection.geometry.coordinates[0]\n          lat = selection.geometry.coordinates[1]\n        } else {\n          // ...it is from the geojson of features\n          const centre = centroid(selection).geometry.coordinates\n          lng = centre[0]\n          lat = centre[1]\n          fly(lng, lat, zoom)\n        }\n        zoom = 14\n        fly(lng, lat, zoom)\n      }\n    }\n  }\n\n  // API call\n  useEffect(() => {\n    const currentLocation = { id: 'search', place_name: 'Go to my location' }\n    if (debouncedSearchTerm) {\n      setIsSearching(true)\n      searchCharacters(debouncedSearchTerm).then(results => {\n        setIsSearching(false)\n        results.unshift(currentLocation)\n        setResults(results)\n      })\n    } else {\n      setResults([currentLocation])\n    }\n  }, [debouncedSearchTerm])\n\n  const clearSearch = () => {\n    setValue('')\n    map.getSource('single-point').setData({\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [0, 0]\n      }\n    })\n  }\n  const groupBy = option => (option.id ? 'location' : 'cool space')\n\n  return (\n    <FormControl className={classes.formControl}>\n      <Autocomplete\n        id=\"geocoder\"\n        options={results}\n        groupBy={groupBy}\n        value={value}\n        onInputChange={e => e && setSearchTerm(e.target.value)}\n        onChange={(event, selection, reason) =>\n          reason === 'clear' ? clearSearch() : forwardGeocode(selection)\n        }\n        getOptionLabel={option =>\n          option\n            ? option.place_name\n              ? option.place_name\n              : option.properties.cool_space_name\n            : ''\n        }\n        isOptionEqualToValue={(option, value) =>\n          option.place_name\n            ? option.place_name === value.place_name\n            : option.cool_space_name === value.cool_space_name\n        }\n        renderInput={params => (\n          <TextField\n            {...params}\n            label=\"Search a place name or address/postcode\"\n          />\n        )}\n      />\n      {isLocating || isSearching ? <LinearProgress /> : ''}\n    </FormControl>\n  )\n\n  // API search function\n  function searchCharacters(search) {\n    return fetch(\n      `https://api.mapbox.com/geocoding/v5/mapbox.places/${search}.json?bbox=-0.489,51.28,0.236,51.686&access_token=${MAPBOX_TOKEN}`\n    )\n      .then(r => r.json())\n      .then(r => r.features)\n      .catch(error => {\n        console.error(error)\n        return []\n      })\n  }\n}\n","import React from 'react'\n\nexport default function usePersistedState(key, defaultValue) {\n  const [state, setState] = React.useState(() => {\n    const persistedState = localStorage.getItem(key)\n    return persistedState ? JSON.parse(persistedState) : defaultValue\n  })\n  React.useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state))\n  }, [state, key])\n  return [state, setState]\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport mapboxgl from 'maplibre-gl'\nimport 'maplibre-gl/dist/maplibre-gl.css'\nimport ReactDOM from 'react-dom'\n\n// import { useFullscreen, useToggle } from 'react-use'\n\nimport PropTypes from 'prop-types'\n\nimport { mapLayers } from './mapLayers.js'\nimport { mapAbout } from './mapAbout.js'\nimport TooltipHover from './components/TooltipHover'\n\nimport { useStyles } from './styles.jsx'\n\nimport usePersistedState from './hooks/usePersistedState'\nimport clsx from 'clsx'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Box from '@material-ui/core/Box'\nimport Paper from '@material-ui/core/Paper'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport SwitchesGroup from './components/SwitchesGroup'\nimport { Geocoder } from './components/Geocoder'\nimport Facilities from './components/Facilities'\nimport Feedback from './components/Feedback'\n\nimport { SiteDialog } from './components/SiteDialog'\n\nimport { useTheme } from '@material-ui/core/styles'\n\nconst iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent)\n\nconst MAPBOX_TOKEN =\n  'pk.eyJ1IjoiZ2xhLWdpcyIsImEiOiJjanBvNGh1bncwOTkzNDNueWt5MGU1ZGtiIn0.XFxLdq2dXttcXSXTiREPTA'\n\nfunction App({ showBorder = false, onTilesLoad = null }) {\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  const classes = useStyles(theme)\n\n  const ref = useRef(null)\n\n  const [layers, setLayers] = useState(mapLayers)\n\n  const [legend, setLegend] = useState(null)\n\n  const [drawerOpen, setDrawerOpen] = usePersistedState('drawer', false)\n\n  const [dialogVisible, setDialogVisible] = useState(false)\n  const handleDialogVisibility = () => {\n    setDialogVisible(!dialogVisible)\n  }\n\n  const [dialogContent, setDialogContent] = useState(null)\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true)\n    setTimeout(function() {\n      map && map.resize()\n      smallScreen\n        ? map.easeTo({\n            padding: { bottom: 150, top: 0 },\n            duration: 1000\n          })\n        : map.easeTo({\n            padding: { right: 150, left: 0 },\n            duration: 1000\n          })\n    }, 10)\n  }\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false)\n    setTimeout(function() {\n      map && map.resize()\n      smallScreen\n        ? map.easeTo({\n            padding: { top: 150, bottom: 0 },\n            duration: 1000\n          })\n        : map.easeTo({\n            padding: { left: 150, right: 0 },\n            duration: 1000\n          })\n    }, 10)\n  }\n\n  const MenuButton = ({ bottom }) => {\n    return (\n      <AppBar\n        position={smallScreen ? 'absolute' : 'fixed'}\n        style={{\n          backgroundColor: 'unset',\n          visibility: 'hidden',\n          bottom: bottom\n        }}\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: drawerOpen\n        })}\n      >\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            className={classes.title}\n          ></Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={handleDrawerOpen}\n            className={clsx(drawerOpen && classes.hide)}\n            style={{ visibility: 'visible' }}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n\n  // TABS\n  const TabPanel = props => {\n    const { children, value, index, ...other } = props\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`scrollable-force-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </div>\n    )\n  }\n\n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired\n  }\n\n  const tabsProps = index => {\n    return {\n      id: `scrollable-force-tab-${index}`,\n      'aria-controls': `scrollable-force-tabpanel-${index}`\n    }\n  }\n  const [tabValue, setTabValue] = usePersistedState('tab', 0)\n\n  const tabChange = (event, newValue) => {\n    setTabValue(Number(newValue))\n  }\n\n  const TabsContent = () => {\n    return (\n      <Paper square>\n        <Tabs\n          value={tabValue}\n          onChange={tabChange}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable force tabs\"\n        >\n          <Tab label=\"About\" {...tabsProps(0)} />\n        </Tabs>\n      </Paper>\n    )\n  }\n\n  const mapContainerRef = useRef(null)\n  const [map, setMap] = useState(null)\n  // const tooltipRef = useRef(\n  //   new mapboxgl.Popup({ offset: 5, closeButton: false })\n  // )\n  const tooltipHoverRef = useRef(\n    new mapboxgl.Popup({ offset: 5, closeButton: false })\n  )\n\n  const [lng, setLng] = usePersistedState('lng', -0.1)\n  const [lat, setLat] = usePersistedState('lat', 51.49)\n  const [zoom, setZoom] = usePersistedState('zoom', 9)\n\n  // LAYER FILTERS\n  useEffect(() => {\n    if (layers && map) {\n      Object.keys(layers).map(el =>\n        map\n          .getStyle()\n          .layers.map(el => el.id)\n          .filter(elfilter => elfilter.startsWith(layers[el].value))\n          .map(innerel =>\n            map.setLayoutProperty(\n              innerel,\n              'visibility',\n              layers[el].showing ? 'visible' : 'none'\n            )\n          )\n      )\n    }\n  }, [layers, map])\n\n  // MAIN PROGRAM\n  useEffect(() => {\n    // Initialize map when component mounts\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'industrial_intensification_sites.json',\n      center: [lng, lat],\n      zoom: zoom,\n      pitch: 10\n    })\n    map.touchZoomRotate.disableRotation()\n\n    map.addControl(\n      new mapboxgl.NavigationControl({\n        showCompass: false,\n        showZoom: true\n      }),\n      'top-left'\n    )\n\n    map.on('load', () => {\n      // LEGEND\n      setLegend(\n        map\n          .getStyle()\n          .layers.filter(el =>\n            // PICK MAP LAYERS THAT MATCH THE LAYERS OBJECT CONTENT\n            Object.values(layers)\n              .map(el => el.value)\n              .includes(el.id)\n          )\n          .map(el => [el.id, el.paint])\n          .map(el => {\n            const ret = {}\n            ret[el[0]] =\n              el[1][Object.keys(el[1]).filter(el => el.includes('color'))[0]]\n            return ret\n          })\n      )\n      map.on('mouseenter', 'industrial-intensification-sites', e => {\n        map.getCanvas().style.cursor = 'pointer'\n      })\n      map.on('mouseleave', 'industrial-intensification-sites', e => {\n        map.getCanvas().style.cursor = ''\n      })\n\n      // add tooltipHover when users mouse move over a point\n      map.on('mousemove', e => {\n        const features = map.queryRenderedFeatures(e.point)\n        if (\n          features.length &&\n          features.filter(el =>\n            el.layer.id.startsWith('industrial-intensification-sites')\n          ).length > 0\n        ) {\n          const feature = features.filter(el =>\n            el.layer.id.startsWith('industrial-intensification-sites')\n          )[0]\n          // Create tooltipHover node\n          const tooltipNode = document.createElement('div')\n          ReactDOM.render(<TooltipHover feature={feature} />, tooltipNode)\n\n          // Set tooltip on map\n          tooltipHoverRef.current\n            .setLngLat(e.lngLat)\n            .setDOMContent(tooltipNode)\n            .addTo(map)\n        } else {\n          tooltipHoverRef.current.remove()\n        }\n      })\n\n      // add tooltip when users mouse move over a point\n      map.on('click', 'industrial-intensification-sites', e => {\n        const features = map.queryRenderedFeatures(e.point)\n        if (\n          features.length &&\n          Object.values(layers)\n            .map(el => el.value)\n            .includes(\n              features.filter(\n                el => el.layer.id === 'industrial-intensification-sites'\n              )[0].layer.id\n            )\n        ) {\n          const feature = features.filter(\n            el => el.layer.id === 'industrial-intensification-sites'\n          )[0]\n          // const tooltipNode = document.createElement('div')\n          // ReactDOM.render(<Tooltip feature={feature} />, tooltipNode)\n          // tooltipRef.current\n          //   .setLngLat(e.lngLat)\n          //   .setDOMContent(tooltipNode)\n          //   .addTo(map)\n          setDialogContent(JSON.stringify(feature))\n          handleDialogVisibility(true)\n        } else {\n          // tooltipRef.current.remove()\n        }\n      })\n      map.keyboard.disable()\n\n      map.on('moveend', () => {\n        const { lng, lat } = map.getCenter()\n        const zoom = map.getZoom()\n        setLng(lng)\n        setLat(lat)\n        setZoom(zoom)\n      })\n\n      // USED BY THE GEOCODER TO ADD A POINT ON MATCH\n      map.addSource('single-point', {\n        type: 'geojson',\n        data: {\n          type: 'FeatureCollection',\n          features: []\n        }\n      })\n\n      map.addLayer({\n        visible: true,\n        id: 'point',\n        source: 'single-point',\n        type: 'circle',\n        paint: {\n          'circle-radius': 10,\n          'circle-color': '#00e48e'\n        }\n      })\n\n      // useState hook\n      setMap(map)\n    })\n\n    // Clean up on unmount\n    return () => map.remove()\n  }, []) // eslint-disable-line\n\n  const gotoLocation = (lng, lat, zoom = 17) => {\n    map &&\n      map.flyTo({\n        center: [lng, lat],\n        zoom: zoom,\n        speed: 2,\n        curve: 1,\n        easing(t) {\n          return t\n        }\n      })\n  }\n\n  useEffect(() => gotoLocation(lng, lat, zoom), [lng, lat, zoom]) // eslint-disable-line\n\n  // MAIN RENDER\n  return (\n    <div ref={ref} className={classes.root}>\n      <CssBaseline />\n      <SiteDialog\n        visible={dialogVisible}\n        handleDialogVisibility={handleDialogVisibility}\n        content={dialogContent}\n      />\n      {!smallScreen && <MenuButton left={smallScreen ? 0 : 'auto'} />}\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: drawerOpen\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <div>\n          <div\n            ref={mapContainerRef}\n            style={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              height: '100%',\n              width: '100%'\n            }}\n          />\n        </div>\n      </main>\n      <SwipeableDrawer\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor={smallScreen ? 'bottom' : 'right'}\n        open={drawerOpen}\n        onOpen={() => {}}\n        onClose={() => {}}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {smallScreen ? <KeyboardArrowDownIcon /> : <ChevronRightIcon />}\n          </IconButton>\n          <h3 style={{ textAlign: 'center', margin: '0 auto' }}>\n            LONDON INDUSTRIAL INTENSIFICATION SITES\n          </h3>{' '}\n        </div>\n        <Divider />\n        {!smallScreen && <TabsContent />}\n        <TabPanel value={tabValue} index={0}>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Typography\n              component={'span'}\n              variant=\"body2\"\n              className={classes.typography}\n            >\n              {mapAbout}\n            </Typography>\n          </div>\n        </TabPanel>\n\n        {smallScreen && <Divider />}\n        {smallScreen && <TabsContent />}\n      </SwipeableDrawer>\n      {smallScreen && (\n        <div style={{ bottom: 0 }}>\n          <MenuButton />\n        </div>\n      )}\n    </div>\n  )\n}\nexport { MAPBOX_TOKEN, App }\n"],"sourceRoot":""}